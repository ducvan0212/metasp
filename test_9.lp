% bag(5).
% item(1,3,5). item(2,1,1). item(3,1,2). item(4,2,3).
% 
% {pick(I)} :- item(I,_,_).
% 
% :- bag(B), S = #sum {W,I: pick(I), item(I,W,V)}, B < S.
% gold(G) :- G = #sum {V,I: pick(I), item(I,W,V)}.
% 
% #maximize {G@1,G: gold(G)}. 

% 1 is priority, G is identifier tuple
% ti are pairwise distinct term tuples generated by gringo whenever the distinguished (head) literals Li are different 


 atom_tuple(0).
 atom_tuple(0,1).
 literal_tuple(0).
 rule(disjunction(0),normal(0)).
 atom_tuple(1).
 atom_tuple(1,2).
 rule(disjunction(1),normal(0)).
 atom_tuple(2).
 atom_tuple(2,3).
 rule(disjunction(2),normal(0)).
 atom_tuple(3).
 atom_tuple(3,4).
 rule(disjunction(3),normal(0)).
 atom_tuple(4).
 atom_tuple(4,5).
 rule(disjunction(4),normal(0)).
 atom_tuple(5).
 atom_tuple(5,6).
 literal_tuple(1).
 literal_tuple(1,2).
 rule(disjunction(5),normal(1)). % atom 5..9 generated for item(I) :- item(I,_,_)
 atom_tuple(6).
 atom_tuple(6,7).
 literal_tuple(2).
 literal_tuple(2,3).
 rule(disjunction(6),normal(2)).
 atom_tuple(7).
 atom_tuple(7,8).
 literal_tuple(3).
 literal_tuple(3,4).
 rule(disjunction(7),normal(3)).
 atom_tuple(8).
 atom_tuple(8,9).
 literal_tuple(4).
 literal_tuple(4,5).
 rule(disjunction(8),normal(4)).
 atom_tuple(9).
 atom_tuple(9,10).
 literal_tuple(5).
 literal_tuple(5,6).
 rule(choice(9),normal(5)).
 atom_tuple(10).
 atom_tuple(10,11).
 literal_tuple(6).
 literal_tuple(6,7).
 rule(choice(10),normal(6)).
 atom_tuple(11).
 atom_tuple(11,12).
 literal_tuple(7).
 literal_tuple(7,8).
 rule(choice(11),normal(7)).
 atom_tuple(12).
 atom_tuple(12,13).
 literal_tuple(8).
 literal_tuple(8,9).
 rule(choice(12),normal(8)).
 atom_tuple(13).
 atom_tuple(13,14).
 weighted_literal_tuple(0).
 weighted_literal_tuple(0,10,3).
 weighted_literal_tuple(0,11,1).
 weighted_literal_tuple(0,12,1).
 weighted_literal_tuple(0,13,2).
 rule(disjunction(13),sum(0,6)).
 atom_tuple(14).
 atom_tuple(14,15).
 rule(disjunction(14),sum(0,7)).
 atom_tuple(15).
 atom_tuple(15,16).
 literal_tuple(9).
 literal_tuple(9,14).
 literal_tuple(9,-15).
 rule(disjunction(15),normal(9)).
 atom_tuple(16).
 literal_tuple(10).
 literal_tuple(10,1).
 literal_tuple(10,16).
 rule(disjunction(16),normal(10)).
 atom_tuple(17).
 atom_tuple(17,17).
 rule(disjunction(17),sum(0,7)).
 literal_tuple(11).
 literal_tuple(11,1).
 literal_tuple(11,17).
 rule(disjunction(16),normal(11)).
 atom_tuple(18).
 atom_tuple(18,18).
 weighted_literal_tuple(1).
 weighted_literal_tuple(1,10,5).
 weighted_literal_tuple(1,11,1).
 weighted_literal_tuple(1,12,2).
 weighted_literal_tuple(1,13,3).
 rule(disjunction(18),sum(1,1)).
 atom_tuple(19).
 atom_tuple(19,19).
 literal_tuple(12).
 literal_tuple(12,-18).
 rule(disjunction(19),normal(12)).
 atom_tuple(20).
 atom_tuple(20,20).
 rule(disjunction(20),sum(1,5)).
 atom_tuple(21).
 atom_tuple(21,21).
 rule(disjunction(21),sum(1,6)).
 atom_tuple(22).
 atom_tuple(22,22).
 literal_tuple(13).
 literal_tuple(13,20).
 literal_tuple(13,-21).
 rule(disjunction(22),normal(13)).
 atom_tuple(23).
 atom_tuple(23,23).
 literal_tuple(14).
 literal_tuple(14,22).
 rule(disjunction(23),normal(14)).
 atom_tuple(24).
 atom_tuple(24,24).
 rule(disjunction(24),sum(1,1)).
 atom_tuple(25).
 atom_tuple(25,25).
 rule(disjunction(25),sum(1,2)).
 atom_tuple(26).
 atom_tuple(26,26).
 literal_tuple(15).
 literal_tuple(15,24).
 literal_tuple(15,-25).
 rule(disjunction(26),normal(15)).
 atom_tuple(27).
 atom_tuple(27,27).
 literal_tuple(16).
 literal_tuple(16,26).
 rule(disjunction(27),normal(16)).
 atom_tuple(28).
 atom_tuple(28,28).
 rule(disjunction(28),sum(1,6)).
 atom_tuple(29).
 atom_tuple(29,29).
 rule(disjunction(29),sum(1,7)).
 atom_tuple(30).
 atom_tuple(30,30).
 literal_tuple(17).
 literal_tuple(17,28).
 literal_tuple(17,-29).
 rule(disjunction(30),normal(17)).
 atom_tuple(31).
 atom_tuple(31,31).
 literal_tuple(18).
 literal_tuple(18,30).
 rule(disjunction(31),normal(18)).
 atom_tuple(32).
 atom_tuple(32,32).
 rule(disjunction(32),sum(1,2)).
 atom_tuple(33).
 atom_tuple(33,33).
 rule(disjunction(33),sum(1,3)).
 atom_tuple(34).
 atom_tuple(34,34).
 literal_tuple(19).
 literal_tuple(19,32).
 literal_tuple(19,-33).
 rule(disjunction(34),normal(19)).
 atom_tuple(35).
 atom_tuple(35,35).
 literal_tuple(20).
 literal_tuple(20,34).
 rule(disjunction(35),normal(20)).
 atom_tuple(36).
 atom_tuple(36,36).
 rule(disjunction(36),sum(1,7)).
 atom_tuple(37).
 atom_tuple(37,37).
 rule(disjunction(37),sum(1,8)).
 atom_tuple(38).
 atom_tuple(38,38).
 literal_tuple(21).
 literal_tuple(21,36).
 literal_tuple(21,-37).
 rule(disjunction(38),normal(21)).
 atom_tuple(39).
 atom_tuple(39,39).
 literal_tuple(22).
 literal_tuple(22,38).
 rule(disjunction(39),normal(22)).
 atom_tuple(40).
 atom_tuple(40,40).
 rule(disjunction(40),sum(1,3)).
 atom_tuple(41).
 atom_tuple(41,41).
 rule(disjunction(41),sum(1,4)).
 atom_tuple(42).
 atom_tuple(42,42).
 literal_tuple(23).
 literal_tuple(23,40).
 literal_tuple(23,-41).
 rule(disjunction(42),normal(23)).
 atom_tuple(43).
 atom_tuple(43,43).
 literal_tuple(24).
 literal_tuple(24,42).
 rule(disjunction(43),normal(24)).
 atom_tuple(44).
 atom_tuple(44,44).
 rule(disjunction(44),sum(1,8)).
 atom_tuple(45).
 atom_tuple(45,45).
 rule(disjunction(45),sum(1,9)).
 atom_tuple(46).
 atom_tuple(46,46).
 literal_tuple(25).
 literal_tuple(25,44).
 literal_tuple(25,-45).
 rule(disjunction(46),normal(25)).
 atom_tuple(47).
 atom_tuple(47,47).
 literal_tuple(26).
 literal_tuple(26,46).
 rule(disjunction(47),normal(26)).
 atom_tuple(48).
 atom_tuple(48,48).
 rule(disjunction(48),sum(1,4)).
 atom_tuple(49).
 atom_tuple(49,49).
 rule(disjunction(49),sum(1,5)).
 atom_tuple(50).
 atom_tuple(50,50).
 literal_tuple(27).
 literal_tuple(27,48).
 literal_tuple(27,-49).
 rule(disjunction(50),normal(27)).
 atom_tuple(51).
 atom_tuple(51,51).
 literal_tuple(28).
 literal_tuple(28,50).
 rule(disjunction(51),normal(28)).
 atom_tuple(52).
 atom_tuple(52,52).
 rule(disjunction(52),sum(1,9)).
 atom_tuple(53).
 atom_tuple(53,53).
 rule(disjunction(53),sum(1,10)).
 atom_tuple(54).
 atom_tuple(54,54).
 literal_tuple(29).
 literal_tuple(29,52).
 literal_tuple(29,-53).
 rule(disjunction(54),normal(29)).
 atom_tuple(55).
 atom_tuple(55,55).
 literal_tuple(30).
 literal_tuple(30,54).
 rule(disjunction(55),normal(30)).
 atom_tuple(56).
 atom_tuple(56,56).
 rule(disjunction(56),sum(1,10)).
 atom_tuple(57).
 atom_tuple(57,57).
 rule(disjunction(57),sum(1,11)).
 atom_tuple(58).
 atom_tuple(58,58).
 literal_tuple(31).
 literal_tuple(31,56).
 literal_tuple(31,-57).
 rule(disjunction(58),normal(31)).
 atom_tuple(59).
 atom_tuple(59,59).
 literal_tuple(32).
 literal_tuple(32,58).
 rule(disjunction(59),normal(32)).
 atom_tuple(60).
 atom_tuple(60,60).
 rule(disjunction(60),sum(1,11)).
 atom_tuple(61).
 atom_tuple(61,61).
 literal_tuple(33).
 literal_tuple(33,60).
 rule(disjunction(61),normal(33)).
 weighted_literal_tuple(2).
 weighted_literal_tuple(2,19,0).
 weighted_literal_tuple(2,23,-5).
 weighted_literal_tuple(2,27,-1).
 weighted_literal_tuple(2,31,-6).
 weighted_literal_tuple(2,35,-2).
 weighted_literal_tuple(2,39,-7).
 weighted_literal_tuple(2,43,-3).
 weighted_literal_tuple(2,47,-8).
 weighted_literal_tuple(2,51,-4).
 weighted_literal_tuple(2,55,-9).
 weighted_literal_tuple(2,59,-10).
 weighted_literal_tuple(2,61,-11).
 minimize(0,2).                       % 0 is priority, 2 is weighted_literal
 literal_tuple(34).
 literal_tuple(34,10).
 output(pick(1),34).
 literal_tuple(35).
 literal_tuple(35,11).
 output(pick(2),35).
 literal_tuple(36).
 literal_tuple(36,12).
 output(pick(3),36).
 literal_tuple(37).
 literal_tuple(37,13).
 output(pick(4),37).
 output(bag(5),0).
 output(item(1,3,5),0).
 output(item(2,1,1),0).
 output(item(3,1,2),0).
 output(item(4,2,3),0).
 literal_tuple(38).
 literal_tuple(38,19).
 output(gold(0),38).
 literal_tuple(39).
 literal_tuple(39,23).
 output(gold(5),39).
 literal_tuple(40).
 literal_tuple(40,27).
 output(gold(1),40).
 literal_tuple(41).
 literal_tuple(41,31).
 output(gold(6),41).
 literal_tuple(42).
 literal_tuple(42,35).
 output(gold(2),42).
 literal_tuple(43).
 literal_tuple(43,39).
 output(gold(7),43).
 literal_tuple(44).
 literal_tuple(44,43).
 output(gold(3),44).
 literal_tuple(45).
 literal_tuple(45,47).
 output(gold(8),45).
 literal_tuple(46).
 literal_tuple(46,51).
 output(gold(4),46).
 literal_tuple(47).
 literal_tuple(47,55).
 output(gold(9),47).
 literal_tuple(48).
 literal_tuple(48,59).
 output(gold(10),48).
 literal_tuple(49).
 literal_tuple(49,61).
 output(gold(11),49).




% asp 1 0 0
% 1 0 1 1 0 0
% 1 0 1 2 0 0
% 1 0 1 3 0 0
% 1 0 1 4 0 0
% 1 0 1 5 0 0
% 1 0 1 6 0 0
% 1 0 1 7 0 0
% 1 0 1 8 0 0
% 1 0 1 9 0 0
% 1 0 1 23 0 1 22
% 1 0 1 27 0 1 26
% 1 0 1 31 0 1 30
% 1 0 1 35 0 1 34
% 1 0 1 39 0 1 38
% 1 0 1 43 0 1 42
% 1 0 1 47 0 1 46
% 1 0 1 51 0 1 50
% 1 0 1 55 0 1 54
% 1 0 1 56 0 1 53
% 1 0 1 59 0 1 58
% 1 1 4 10 11 12 13 0 0
% 1 0 1 14 0 3 10 13 11
% 1 0 1 45 0 3 10 13 11
% 1 0 1 52 0 3 10 13 11
% 1 0 1 14 0 3 10 13 12
% 1 0 1 45 0 3 10 13 12
% 1 0 1 52 0 3 10 13 12
% 1 0 1 53 0 3 10 13 12
% 1 0 0 0 4 10 11 12 13
% 1 0 0 0 1 14
% 1 0 1 18 0 1 10
% 1 0 1 20 0 1 10
% 1 0 1 24 0 1 10
% 1 0 1 25 0 1 10
% 1 0 1 32 0 1 10
% 1 0 1 33 0 1 10
% 1 0 1 40 0 1 10
% 1 0 1 41 0 1 10
% 1 0 1 48 0 1 10
% 1 0 1 49 0 1 10
% 1 0 1 18 0 1 11
% 1 0 1 24 0 1 11
% 1 0 1 18 0 1 12
% 1 0 1 24 0 1 12
% 1 0 1 25 0 1 12
% 1 0 1 32 0 1 12
% 1 0 1 18 0 1 13
% 1 0 1 24 0 1 13
% 1 0 1 25 0 1 13
% 1 0 1 32 0 1 13
% 1 0 1 33 0 1 13
% 1 0 1 40 0 1 13
% 1 0 1 19 0 1 -18
% 1 0 1 20 0 2 13 12
% 1 0 1 41 0 2 13 12
% 1 0 1 48 0 2 13 12
% 1 0 1 49 0 2 13 12
% 1 0 1 21 0 2 10 13
% 1 0 1 28 0 2 10 13
% 1 0 1 29 0 2 10 13
% 1 0 1 36 0 2 10 13
% 1 0 1 37 0 2 10 13
% 1 0 1 44 0 2 10 13
% 1 0 1 21 0 2 10 12
% 1 0 1 28 0 2 10 12
% 1 0 1 29 0 2 10 12
% 1 0 1 36 0 2 10 12
% 1 0 1 21 0 2 10 11
% 1 0 1 28 0 2 10 11
% 1 0 1 21 0 3 13 12 11
% 1 0 1 28 0 3 13 12 11
% 1 0 1 22 0 2 20 -21
% 1 0 1 26 0 2 24 -25
% 1 0 1 30 0 2 28 -29
% 1 0 1 33 0 2 12 11
% 1 0 1 40 0 2 12 11
% 1 0 1 34 0 2 32 -33
% 1 0 1 37 0 3 10 12 11
% 1 0 1 44 0 3 10 12 11
% 1 0 1 38 0 2 36 -37
% 1 0 1 41 0 2 13 11
% 1 0 1 48 0 2 13 11
% 1 0 1 42 0 2 40 -41
% 1 0 1 46 0 2 44 -45
% 1 0 1 50 0 2 48 -49
% 1 0 1 54 0 2 52 -53
% 1 0 1 58 0 1 53
% 2 0 11 23 -5 27 -1 31 -6 35 -2 39 -7 43 -3 47 -8 51 -4 55 -9 59 -10 61 -11
% 4 6 bag(5) 0
% 4 11 item(1,3,5) 0
% 4 11 item(2,1,1) 0
% 4 11 item(3,1,2) 0
% 4 11 item(4,2,3) 0
% 4 7 pick(1) 1 10
% 4 7 pick(2) 1 11
% 4 7 pick(3) 1 12
% 4 7 pick(4) 1 13
% 4 7 gold(0) 1 19
% 4 7 gold(5) 1 23
% 4 7 gold(1) 1 27
% 4 7 gold(6) 1 31
% 4 7 gold(2) 1 35
% 4 7 gold(7) 1 39
% 4 7 gold(3) 1 43
% 4 7 gold(8) 1 47
% 4 7 gold(4) 1 51
% 4 7 gold(9) 1 55
% 4 8 gold(10) 1 59
% 0